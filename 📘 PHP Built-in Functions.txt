ğŸ“˜ PHP Built-in Functions with Examples
ğŸ”¹ 1. Array Functions
<?php
$numbers = [1, 2, 3, 4, 5];

// array_map
$doubled = array_map(fn($n) => $n * 2, $numbers); 
print_r($doubled); // [2,4,6,8,10]

// array_filter
$even = array_filter($numbers, fn($n) => $n % 2 == 0);
print_r($even); // [2,4]

// array_reduce
$sum = array_reduce($numbers, fn($carry, $n) => $carry + $n, 0);
echo $sum; // 15

// array_merge
$arr1 = ["a" => 1];
$arr2 = ["b" => 2];
print_r(array_merge($arr1, $arr2)); // ['a'=>1,'b'=>2]

// array_diff
$a = [1, 2, 3];
$b = [2, 3, 4];
print_r(array_diff($a, $b)); // [1]

// array_keys
print_r(array_keys(["a"=>1,"b"=>2])); // ['a','b']

// sort
$unsorted = [3,1,2];
sort($unsorted);
print_r($unsorted); // [1,2,3]

ğŸ”¹ 2. String Functions
<?php
$str = " Hello World ";

// strlen
echo strlen($str); // 13

// substr
echo substr($str, 0, 5); // " Hello"

// strpos
echo strpos("Hello World", "World"); // 6

// str_replace
echo str_replace("World", "PHP", $str); // Hello PHP

// trim
echo trim($str); // "Hello World"

// strtoupper / strtolower
echo strtoupper("php"); // PHP
echo strtolower("PHP"); // php

// explode / implode
$parts = explode(" ", "one two three");
print_r($parts); // ['one','two','three']

echo implode("-", $parts); // one-two-three

// sprintf
$name = "Kaleb";
echo sprintf("Hello %s!", $name); // Hello Kaleb!

ğŸ”¹ 3. Math Functions
<?php
// abs
echo abs(-5); // 5

// round
echo round(3.6); // 4

// ceil
echo ceil(3.1); // 4

// floor
echo floor(3.9); // 3

// sqrt
echo sqrt(16); // 4

// max / min
echo max(1, 5, 3); // 5
echo min(1, 5, 3); // 1

// Trigonometry
echo sin(pi()/2); // 1
echo cos(0);      // 1

ğŸ”¹ 4. Date & Time
<?php
// date
echo date("Y-m-d H:i:s"); // e.g. 2025-08-23 14:35:00

// time
echo time(); // Unix timestamp

// strtotime
echo strtotime("next Monday"); // timestamp for next Monday

// DateTime object
$dt = new DateTime("2025-01-01");
echo $dt->format("Y-m-d"); // 2025-01-01

// DateInterval
$dt->add(new DateInterval("P10D")); 
echo $dt->format("Y-m-d"); // 2025-01-11

ğŸ”¹ 5. Variables & Types
<?php
$val = 42;

// gettype
echo gettype($val); // integer

// is_array
echo is_array($val) ? "array" : "not array"; // not array

// isset
$name = "Kaleb";
echo isset($name); // 1 (true)

// empty
$emptyVar = "";
echo empty($emptyVar); // 1 (true)

// var_dump
var_dump($val); // int(42)

ğŸ”¹ 6. File & I/O
<?php
// file_put_contents
file_put_contents("test.txt", "Hello PHP");

// file_get_contents
echo file_get_contents("test.txt"); // Hello PHP

// fopen, fwrite, fclose
$fp = fopen("test2.txt", "w");
fwrite($fp, "New File Content");
fclose($fp);

// file_exists
echo file_exists("test.txt"); // 1

// is_dir
echo is_dir("."); // 1 (true for current directory)

ğŸ”¹ 7. JSON
<?php
$data = ["name" => "Kaleb", "score" => 85];

// json_encode
$json = json_encode($data);
echo $json; // {"name":"Kaleb","score":85}

// json_decode
$obj = json_decode($json);
echo $obj->name; // Kaleb